{:deps {org.clojure/clojure {:mvn/version "1.11.3"}
        instaparse/instaparse {:mvn/version "1.4.10"}
        org.clojure/data.csv {:mvn/version "1.0.0"}
        org.clojure/clojurescript {:mvn/version "1.11.132"}
        org.clojars.quoll/rudolf {:mvn/version "0.2.1"}}
 :paths ["src" "resources"]
 :aliases {
   :run {:main-opts ["-m" "twylyte.core"]
         :exec-fn sparql-parser.core/-main}
   :test {:extra-paths ["test" "src"]
          :extra-deps {org.clojure/test.check {:mvn/version "1.1.1"}
                       io.github.cognitect-labs/test-runner
                       {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
          :main-opts ["-m" "cognitect.test-runner"]
          :exec-fn cognitect.test-runner.api/test}
   :test-cljs {:extra-paths ["test" "src" "resources"]
               :main-opts ["--main"    "cljs.main"
                           "--repl-env" "node"
                           "-i" "test/twylyte/c_test.cljc"]  ;; execute with clj -M:test-cljs
               :extra-deps {org.clojure/clojurescript {:mvn/version "1.11.60"}}}
   :build {:deps {io.github.seancorfield/build-clj {:git/tag "v0.8.2" :git/sha "0ffdb4c"}}
          :ns-default build}}}
